version: "3.9"

services:
  backend:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - "8000"
    ports:
      - "8000:8000"
      - "8080:8080"
    environment:
      - KOTLIN_ENV=test-prod
      - R2DBC_NAME=delivery
      - R2DBC_PASSWORD=postgres
      - R2DBC_USERNAME=postgres
      - R2DBC_URL=r2dbc:postgresql://host.docker.internal:5433/delivery
      - R2DBC_POOL_MAX_SIZE=30
      - R2DBC_POOL_INITIAL_SIZE=20
      - FLYWAY_URL=jdbc:postgresql://host.docker.internal:5433/delivery
      - FLYWAY_SCHEMA=["delivery"]
      - GRAPHHOPPER_API_KEY=${GRAPHHOPPER_API_KEY}
      - IS_DOCKERIZED=true
    depends_on:
      - postgresql
    networks: [ "microservice" ]

  postgresql:
    image: postgres:16.1-alpine3.19
    container_name: postgresql
    expose:
      - "5433"
    # Port is mapped to 5433 to not collide with local running postgresql that is outside the container
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_DB=delivery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=5432
      - POSTGRES_INITDB_ARGS:'--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    command: -p 5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    networks: [ "microservice" ]

networks:
  microservice:
    name: microservice