syntax = "proto3";

package com.vasiliytemniy.grpc.ordertracking.service;


service OrderTrackingService {
  rpc create (CreateRequest) returns (OrderTrackingResponse);
  rpc getStreamByOrderId (GetStreamByOrderIdRequest) returns (stream OrderTrackingResponse);
  rpc getPageByOrderId (GetPageByOrderIdRequest) returns (PageOrderTrackingsResponse);
  rpc getLastByOrderId (GetLastByOrderIdRequest) returns (OrderTrackingResponse);
  rpc getStreamByCarrierId (GetStreamByCarrierIdRequest) returns (stream OrderTrackingResponse);
  rpc getPageByCarrierId (GetPageByCarrierIdRequest) returns (PageOrderTrackingsResponse);
  rpc getPageByFilters (GetPageByFiltersRequest) returns (PageOrderTrackingsResponse);
  rpc update (UpdateRequest) returns (OrderTrackingResponse);
  rpc setStatuses (SetStatusesRequest) returns (ManyOrderTrackingsResponse);
  rpc reorder (ReorderRequest) returns (ManyOrderTrackingsResponse);
  rpc deleteByOrderId (DeleteByOrderIdRequest) returns (ManyOrderTrackingsResponse);
  rpc deleteByExternalId (DeleteByExternalIdRequest) returns (OrderTrackingResponse);
}

message OrderTrackingData {
  string id = 1;
  string orderId = 2;
  int32 pointNumber = 3;
  string fromFacilityId = 4;
  string destinationId = 5;
  string destinationType = 6;
  string carrierId = 7;
  string status = 8;
  int32 deliveryCost = 9;
  string currency = 10;
  int32 currencyDecimalMultiplier = 11;
  optional int32 massControlValue = 12;
  optional string massMeasure = 13;
  optional double lat = 14;
  optional double lon = 15;
  optional string estimatedDeliveryAt = 16;
  optional string deliveredAt = 17;
  optional string createdAt = 18;
  optional string updatedAt = 19;
}

message OrderTrackingExternalId {
  string orderId = 1;
  int32 pointNumber = 2;
}

message OrderTrackingIdFilterGroup {
  string type = 1;
  string id = 2;
}

message OrderTrackingTimeFilterGroup {
  string type = 1;
  optional string from = 2;
  optional string to = 3;
}

message OrderTrackingNullablesFilterGroup {
  string type = 1;
  bool isOrNotNull = 2;
}

// Requests

message CreateRequest {
  string orderId = 1;
  string fromFacilityId = 2;
  string destinationId = 3;
  string destinationType = 4;
  string carrierId = 5;
  string status = 6;
  int32 deliveryCost = 7;
  string currency = 8;
  int32 currencyDecimalMultiplier = 9;
  optional int32 massControlValue = 10;
  optional string massMeasure = 11;
  optional double lat = 12;
  optional double lon = 13;
  optional string estimatedDeliveryAt = 14;
  optional string deliveredAt = 15;
  optional int32 pointNumber = 16;
}

message GetStreamByOrderIdRequest {
  string orderId = 1;
}

message GetPageByOrderIdRequest {
  string orderId = 1;
  int32 page = 2;
  int32 size = 3;
}

message GetLastByOrderIdRequest {
  string orderId = 1;
  bool findLast = 2;
}

message GetStreamByCarrierIdRequest {
  string carrierId = 1;
  bool filterActive = 2;
}

message GetPageByCarrierIdRequest {
  string carrierId = 1;
  int32 page = 2;
  int32 size = 3;
  bool filterActive = 4;
}

message GetPageByFiltersRequest {
  repeated OrderTrackingIdFilterGroup idFilterGroups = 1;
  repeated OrderTrackingTimeFilterGroup timeFilterGroups = 2;
  repeated string eitherEqualStatusFilters = 3;
  repeated string neitherEqualStatusFilters = 4;
  repeated OrderTrackingNullablesFilterGroup nullablesFilterGroups = 5;
  bool hasMassMeasureFilter = 6;
  int32 page = 7;
  int32 size = 8;
}

message UpdateRequest {
  string orderId = 1;
  int32 pointNumber = 2;
  string fromFacilityId = 3;
  string destinationId = 4;
  string destinationType = 5;
  string carrierId = 6;
  string status = 7;
  int32 deliveryCost = 8;
  string currency = 9;
  int32 currencyDecimalMultiplier = 10;
  optional int32 massControlValue = 11;
  optional string massMeasure = 12;
  optional double lat = 13;
  optional double lon = 14;
  optional string estimatedDeliveryAt = 15;
  optional string deliveredAt = 16;
}

message SetStatusesRequest {
  string status = 1;
  string deliveredAt = 2;
  repeated OrderTrackingExternalId orderTrackingExternalIds = 3; // An array to be able to set multiple orders statuses if many orders are delivered at the same time
}

message ReorderRequest {
  message MapFieldEntry {
    int32 key = 1;
    int32 value = 2;
  }
  string orderId = 1;
  repeated MapFieldEntry fromPointNumberToPointNumber = 2;
}

message DeleteByOrderIdRequest {
  string orderId = 1;
}

message DeleteByExternalIdRequest {
  string orderId = 1;
  int32 pointNumber = 2;
}


// Responses

message OrderTrackingResponse {
  OrderTrackingData orderTracking = 1;
}

message ManyOrderTrackingsResponse {
  repeated OrderTrackingData orderTracking = 1;
}

message PageOrderTrackingsResponse {
  repeated OrderTrackingData content = 1;
  int32 page = 2;
  int32 size = 3;
  int32 totalElements = 4;
  int32 totalPages = 5;
  bool isFirst = 6;
  bool isLast = 7;
}